I want this project to be separated into modular components.
Maybe something like this structure:

1. index.js - the entry point, will instantiate app.js
2. controller.js - the main controller, bringing all components together
3. template.html
4. styles.css
5. /components/search.js - handles the search input
6. /components/menu.js - handles the hamburger menu logic
7. /components/api.js - fetches data from the weather API
8. /components/weather-cards/temperature.js - DOM manipulation to display weather data in the UI.

Note: each weather data type (temperature, humidity, etc.) gets its own weatherCard component.

Example request URL:
https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/montreal%20quebec/next7days?unitGroup=metric&key=39U4T4JP9KSAU8CAEP5CYS87V&contentType=json


Processing weather data:
data.days is an array containing the day objects requested. 
For today, the length is 1 and the object with all the weather data for the day is contained within array[0].
- Maybe I could run a forEach() loop onto the data.days array, to extract the data for the selected days.

Dropdown menu ideas:
1. Clicking away from the open menu should close it. Done.

How to use settings when building requests:
1. getSettings() returns an object. 
2. Maybe I can look through it and find the properties with value=true.
3. I can then inject those property names to the request string in fetchWeather.
